<?php

namespace frontend\controllers\payments;

use common\models\User;
use common\models\UserPayments;
use Yii;
use yii\web\Controller;

/**
 * Default controller for the `Payments` module
 */
class PayeerController extends Controller
{
    /**
     * Renders the index view for the module
     * @param \yii\base\Action $action
     * @return string
     * @throws \yii\web\BadRequestHttpException
     */

    public function beforeAction($action)
    {
        Yii::$app->controller->enableCsrfValidation = false;
        return parent::beforeAction($action); // TODO: Change the autogenerated stub
    }

    public function actionResult()
    {
        return $this->redirect(['/']);
    }

    public function actionSuccess()
    {
        if (!$this->_checkHash(Yii::$app->request->get())) {
            Yii::$app->session->setFlash('danger', Yii::t('main', 'Ошибка оплаты, обратитесь к администрации.'));

            return $this->redirect(['/']);
        }

        $id = (int)Yii::$app->request->get('m_orderid');

        $payment = UserPayments::findOne([
            'id' => $id,
            'status' => UserPayments::STATUS_WAIT,
        ]);

        if (!empty($payment)) {
            $payment->status = UserPayments::STATUS_SUCCESS;
            $payment->save();

            $user = User::findOne(['id' => $payment->user_id]);
            if ($payment->amount_rub >= 50) {
                $payment->amount_rub = $payment->amount_rub * 1.05;
            }

            $user->balance += $payment->amount_rub;
            $user->save();
        }

        Yii::$app->session->setFlash('success', Yii::t('main', 'Средства успешно зачисленны на Ваш баланс.'));

        return $this->redirect(['/user/balance']);
    }

    public function actionFailure()
    {
        if (!isset(Yii::$app->request->get()['m_orderid'])) {
            return $this->redirect(['/user/balance']);
        }

        $id = (int)Yii::$app->request->get('m_orderid');

        $payment = UserPayments::findOne([
            'id' => $id,
            'user_id' => Yii::$app->user->id,
            'status' => UserPayments::STATUS_WAIT,
        ]);

        if (!empty($payment)) {
            Yii::$app->session->setFlash('error', Yii::t('main', 'Вы отказались от оплаты, средства не зачислены.'));

            $payment->status = UserPayments::STATUS_CANCELED;
            $payment->save();
        }

        return $this->redirect(['/user/balance']);
    }

    private function _checkHash($data)
    {
        if (!isset($data['m_operation_id'],
            $data['m_operation_ps'],
            $data['m_operation_date'],
            $data['m_operation_pay_date'],
            $data['m_shop'],
            $data['m_orderid'],
            $data['m_amount'],
            $data['m_curr'],
            $data['m_desc'],
            $data['m_status'])
        )
            return false;

        return true;
    }
}