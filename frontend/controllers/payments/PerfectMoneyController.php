<?php

namespace frontend\controllers\payments;

use common\models\User;
use common\models\UserPayments;
use Yii;
use yii\web\Controller;

/**
 * Default controller for the `Payments` module
 */
class PerfectMoneyController extends Controller
{

    protected $hash;

    public function init()
    {
        $this->hash = strtoupper(md5('*SECRET_HERE*'));
        parent::init();
    }

    public function beforeAction($action)
    {
        Yii::$app->controller->enableCsrfValidation = false;
        return parent::beforeAction($action); // TODO: Change the autogenerated stub
    }

    public function actionResult()
    {
        if (!$this->_checkHash(Yii::$app->request->post())) {
            return $this->redirect(['/']);
        }

        $id = (int)Yii::$app->request->post('PAYMENT_ID');

        $payment = UserPayments::findOne([
            'id' => $id,
            'status' => UserPayments::STATUS_WAIT,
        ]);

        if (!empty($payment)) {
            $payment->status = UserPayments::STATUS_SUCCESS;
            $payment->save();

            $user = User::findOne(['id' => $payment->user_id]);
            if ($payment->amount_rub >= 50) {
                $payment->amount_rub = $payment->amount_rub * 1.05;
            }

            $user->balance += $payment->amount_rub;
            $user->save();
        }

        Yii::$app->session->setFlash('success', Yii::t('main', 'Средства успешно зачисленны на Ваш баланс.'));

        return $this->redirect(['/user/balance']);
    }

    public function actionSuccess()
    {

        Yii::$app->session->setFlash('success', Yii::t('main', 'Средства успешно зачисленны на Ваш баланс.'));

        return $this->redirect(['/user/balance']);
    }

    public function actionFailure()
    {
        if (!isset(Yii::$app->request->post()['PAYMENT_ID'])) {
            return $this->redirect(['/user/balance']);
        }

        $id = (int)Yii::$app->request->post('PAYMENT_ID');

        $payment = UserPayments::findOne([
            'id' => $id,
            'user_id' => Yii::$app->user->id,
            'status' => UserPayments::STATUS_WAIT,
        ]);

        if (!empty($payment)) {
            Yii::$app->session->setFlash('error', Yii::t('main', 'Вы отказались от оплаты, средства не зачислены.'));

            $payment->status = UserPayments::STATUS_CANCELED;
            $payment->save();
        }

        return $this->redirect(['/user/balance']);
    }

    private function _checkHash($data)
    {
        if (!isset($data['PAYMENT_ID'],
            $data['PAYEE_ACCOUNT'],
            $data['PAYMENT_AMOUNT'],
            $data['PAYMENT_UNITS'],
            $data['PAYMENT_BATCH_NUM'],
            $data['PAYER_ACCOUNT'],
            $data['TIMESTAMPGMT'],
            $data['V2_HASH'])
        )
            return false;

        $params = [
            $data['PAYMENT_ID'],
            $data['PAYEE_ACCOUNT'],
            $data['PAYMENT_AMOUNT'],
            $data['PAYMENT_UNITS'],
            $data['PAYMENT_BATCH_NUM'],
            $data['PAYER_ACCOUNT'],
            strtoupper(md5('*SECRET_HERE*')),
            $data['TIMESTAMPGMT'],
        ];
        $hash = strtoupper(md5(implode(':', $params)));

        if ($hash == $data['V2_HASH'])
            return true;
        else
            return false;
    }
}
