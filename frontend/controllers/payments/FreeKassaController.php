<?php

namespace frontend\controllers\payments;

use common\models\User;
use common\models\UserPayments;
use Yii;
use yii\web\Controller;

/**
 * Default controller for the `Payments` module
 */
class FreeKassaController extends Controller
{
    /**
     * Renders the index view for the module
     * @param \yii\base\Action $action
     * @return string
     * @throws \yii\web\BadRequestHttpException
     */

    public function beforeAction($action)
    {
        Yii::$app->controller->enableCsrfValidation = false;
        return parent::beforeAction($action); // TODO: Change the autogenerated stub
    }

    public function actionResult()
    {
        $post = Yii::$app->request->post();

        if (!$this->checkHash($post)) {
            Yii::$app->session->setFlash('error', Yii::t('main', 'Ошибка оплаты, обратитесь к администрации.'));

            return $this->redirect(['/user/balance']);
        }
        $id = (int)$post['MERCHANT_ORDER_ID'];

        $payment = UserPayments::findOne([
            'id' => $id,
            'status' => UserPayments::STATUS_WAIT,
        ]);

        if (!empty($payment)) {
            $payment->status = UserPayments::STATUS_SUCCESS;
            $payment->save();

            $user = User::findOne(['id' => $payment->user_id]);
            if ($payment->amount_rub >= 50) {
                $payment->amount_rub = $payment->amount_rub * 1.05;
            }

            $user->balance += $payment->amount_rub;
            $user->save();
        }
    }

    public function actionSuccess()
    {

        Yii::$app->session->setFlash('success', Yii::t('main', 'Средства успешно зачисленны на Ваш баланс.'));

        return $this->redirect(['/user/balance']);
    }

    public function actionFailure()
    {
        Yii::$app->session->setFlash('error', Yii::t('main', 'Вы отказались от оплаты, средства не зачислены.'));

        return $this->redirect(['/user/balance']);
    }

    public function checkHash($data)
    {
        if (!isset(
            $data['MERCHANT_ID'],
            $data['AMOUNT'],
            $data['intid'],
            $data['MERCHANT_ORDER_ID'],
            $data['P_EMAIL'],
            $data['CUR_ID'],
            $data['SIGN'])
        ) {
            return false;
        }

        $params = [
            '*MERCHANT_ID_HERE*',
            $data['AMOUNT'],
            '*SECRET_HERE*',
            $data['MERCHANT_ORDER_ID']
        ];

        $hash = md5(implode(':', $params));

        if ($hash == $data['SIGN']) {
            return true;
        }

        return false;
    }
}
