<?php

namespace common\models;

use frontend\modules\developer\models\Questions;
use Yii;

/**
 * This is the model class for table "news".
 *
 * @property int $id
 * @property string $title
 * @property string $short_text
 * @property string $full_text
 * @property string $date
 * @property string $language
 * @property int $categorie_id
 * @property int $views_count
 * @property string $title_eng
 */
class News extends \yii\db\ActiveRecord
{
    /**
     * {@inheritdoc}
     */
    public static function tableName()
    {
        return 'news';
    }

    /**
     * {@inheritdoc}
     */
    public function rules()
    {
        return [
            [['title', 'short_text', 'full_text', 'language'], 'required'],
            [['short_text', 'full_text', 'language'], 'string'],
            [['date', 'title_eng'], 'safe'],
            [['categorie_id', 'views_count'], 'integer'],
            [['title'], 'string', 'max' => 128],
            [['categorie_id'], 'exist', 'skipOnError' => true, 'targetClass' => NewsCategories::className(), 'targetAttribute' => ['categorie_id' => 'id']],
        ];
    }

    /**
     * {@inheritdoc}
     */
    public function attributeLabels()
    {
        return [
            'id' => Yii::t('app', 'ID'),
            'title' => Yii::t('main', 'Заголовок'),
            'short_text' => Yii::t('main', 'Краткий текст'),
            'full_text' => Yii::t('main', 'Полный текст'),
            'date' => Yii::t('main', 'Дата'),
        ];
    }

    public function getCategorie()
    {
        return $this->hasOne(NewsCategories::className(), ['id' => 'categorie_id']);
    }

    public function beforeSave($insert)
    {
       if ($insert) {
           $this->title_eng = Questions::translit($this->title);
       }

        return parent::beforeSave($insert); // TODO: Change the autogenerated stub
    }

    public function afterSave($insert, $changedAttributes)
    {
        parent::afterSave($insert, $changedAttributes); // TODO: Change the autogenerated stub

        if ($insert) {
            $category = NewsCategories::findOne(['id' => $this->categorie_id]);

            if ($this->language == 'ru-RU') {
                $category->news_count++;
            } else {
                $category->news_count_eng++;
            }

            $category->save();
        }
    }

    public static function lastNewsCount()
    {
        $lastDay = strtotime(date('Y-m-d H:m:s')) - 86400;

        return self::find()
            ->where(['>=', 'date', date('Y-m-d H:m:s', $lastDay)])
            ->andWhere(['language' => Yii::$app->language])
            ->count();
    }
}
